{"version":3,"file":"static/js/522.294eb193.chunk.js","mappings":"2QAoFA,UAxEc,SAACA,GACX,OAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UACb,GAAeC,EAAAA,EAAAA,IAAaF,GAArBG,GAAP,eACA,GAAgBC,EAAAA,EAAAA,IACZH,EAAUI,WAAW,UADlBC,GAAP,eAGA,GAA6BF,EAAAA,EAAAA,IAC3BH,EAAUI,WAAW,YADvB,eAAOE,EAAP,KAAiBC,EAAjB,KAGA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoCJ,EAAAA,EAAAA,WAAU,GAA9C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAsCN,EAAAA,EAAAA,UAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KAYA,IATAC,EAAAA,EAAAA,YAAU,WACHN,EAAYO,QACXJ,EAAcH,EAAYO,QAC3BP,EAAYO,QAAUP,EAAYO,OAASb,EAAMa,QAChDR,EAAgBC,EAAYQ,MANH,GAMUJ,EAAc,GANxB,EAMuCA,IACjEV,GAASQ,IAAeR,EAAMa,QAC7BR,EAAgBL,EAAMe,QAAO,SAACC,GAAD,OAASA,EAAIC,MAAQpB,EAAKoB,OAAKH,MARnC,GAQ0CJ,EAAc,GARxD,EAQuEA,MACrG,CAACA,EAAaF,EAAYF,IAE1BJ,EACC,OAAO,SAAC,IAAD,IAERF,GAASQ,EAAa,GACrBC,EAAcT,EAAMa,QAErBP,EAAYO,QAAUL,IAAeF,EAAYO,QAChDJ,EAAcH,EAAYO,QAE9B,IAAIK,GAAKC,EAAAA,EAAAA,GAAYnB,EAAOH,EAAKoB,KAC3BG,EAAe,SAACC,IAClBC,EAAAA,EAAAA,IAAOJ,EAAGK,KAAML,EAAGI,OAAQD,IAGzBG,EAAiB,SAACH,IACpBI,EAAAA,EAAAA,IAASP,EAAGK,KAAML,EAAGI,OAAQD,IAUjC,OACI,iBAAKK,UAAU,QAAf,WACI,SAAC,IAAD,CAAaC,SALJ,SAACC,GACdrB,EAAeP,EAAMe,QAAO,SAACC,GAAD,OAASA,EAAIa,YAAYC,oBAAoBC,SAASH,EAAME,4BAKnF1B,EACI4B,KAAI,SAACC,EAAMC,GACR,OAAO,SAAC,KAAD,kBAESD,GAFT,IAGKE,SAAUjB,EAAGI,OAAOS,SAASE,EAAKhB,KAClCK,OAAQF,EACRgB,SAAUnC,EAASc,QAAO,SAAAsB,GAAM,OAAIA,EAAOC,QAAQP,SAASlC,EAAKoB,MAAQoB,EAAOC,QAAQP,SAASE,EAAKhB,QAAM,GAC5GQ,SAAUD,IALLU,MASR,IAAhBxB,GAAqBN,EAAaS,OAnDV,EAoDnB,MACA,SAAC,IAAD,CAAYH,YAAaA,EAAa6B,eAAgB/B,EAAYgC,SArD/C,EAqDmEC,YArDhE,EAqD0FC,cAxBxG,SAACC,GACnBhC,EAAegC","sources":["Components/Users/Users.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Users.css\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Context } from \"../../index\";\r\nimport PreLoader from \"../PreLoader/PreLoader\";\r\nimport User from \"./User/User\";\r\nimport { getUserByID } from \"../../utils/getter\";\r\nimport { Follow, unFollow } from \"../../API/FirestoreRequests\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport SearchUsers from \"../SearchUsers/SearchUsers\";\r\n\r\nconst Users = (props) => {\r\n    const {auth, firestore} = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    const [users] = useCollectionData(\r\n        firestore.collection('users')\r\n    )\r\n    const [messages, loading ] = useCollectionData(\r\n      firestore.collection('dialogs')\r\n    )\r\n    const [portionUsers, setPortionUsers] = useState([]);\r\n    const [relultUsers, setRelultUsers] = useState([]);\r\n    const [usersCount, setUsersCount] = useState(-1);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, portionSize] = [5, 3];\r\n\r\n    useEffect(() => {\r\n        if(relultUsers.length)\r\n            setUsersCount(relultUsers.length);\r\n        if(relultUsers.length && relultUsers.length < users.length)\r\n            setPortionUsers(relultUsers.slice((currentPage - 1) * pageSize, currentPage * pageSize))\r\n        if(users && usersCount === users.length)\r\n            setPortionUsers(users.filter((val) => val.uid !== user.uid).slice((currentPage - 1) * pageSize, currentPage * pageSize))\r\n    }, [currentPage, usersCount, relultUsers])\r\n\r\n    if(loading)\r\n        return <PreLoader />\r\n\r\n    if(users && usersCount < 0)\r\n        setUsersCount(users.length);\r\n\r\n    if(relultUsers.length && usersCount !== relultUsers.length)\r\n        setUsersCount(relultUsers.length);\r\n    \r\n    let me = getUserByID(users, user.uid);\r\n    const FollowChange = (id) => {\r\n        Follow(me.path, me.Follow, id)\r\n    }\r\n\r\n    const unFollowChange = (id) => {\r\n        unFollow(me.path, me.Follow, id)\r\n    }\r\n\r\n    const onPageChanged = (page) => {\r\n        setCurrentPage(page);\r\n    }\r\n\r\n    const onSearch = (value) =>{\r\n        setRelultUsers(users.filter((val) => val.displayName.toLocaleLowerCase().includes(value.toLocaleLowerCase())))\r\n    }\r\n    return (\r\n        <div className=\"users\">\r\n            <SearchUsers onSearch={onSearch} />\r\n            {portionUsers\r\n                .map((item, i) => {\r\n                    return <User \r\n                                key={i} \r\n                                {...item} \r\n                                isFollow={me.Follow.includes(item.uid)} \r\n                                Follow={FollowChange} \r\n                                dialogId={messages.filter(dialog => dialog.between.includes(user.uid) && dialog.between.includes(item.uid))[0]}\r\n                                unFollow={unFollowChange} \r\n                            />\r\n                })\r\n            }\r\n            {currentPage === 1 && portionUsers.length < pageSize     \r\n                ? null         \r\n                : <Pagination currentPage={currentPage} totalItemCount={usersCount} pageSize={pageSize} portionSize={portionSize} onPageChanged={onPageChanged}  />\r\n            }     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;"],"names":["props","useContext","Context","auth","firestore","useAuthState","user","useCollectionData","collection","users","messages","loading","useState","portionUsers","setPortionUsers","relultUsers","setRelultUsers","usersCount","setUsersCount","currentPage","setCurrentPage","useEffect","length","slice","filter","val","uid","me","getUserByID","FollowChange","id","Follow","path","unFollowChange","unFollow","className","onSearch","value","displayName","toLocaleLowerCase","includes","map","item","i","isFollow","dialogId","dialog","between","totalItemCount","pageSize","portionSize","onPageChanged","page"],"sourceRoot":""}